[{"title":"Python-pandas工具书","url":"/2019/08/20/Python-pandas工具书/","content":"\n## **Dataframe常用操作**\n\n### dataframe中的String部分代替  `replace` `替换` \n函数用：str.replace \n部分特殊字符用\\来转义\n\n```\n#将指定正则的内容，替换为空\nresult[\"textContent\"] = result[\"textContent\"].str.replace(\"\\[\\('|', ''\\)\\]|\\[\\]\",'', regex=True)\n```\n\n\n### 正则提取\n\n```\nimport re\ntextType=re.findall(r'\"type\\\":(\\d+)',text)\n```\n\n\n### 数据导出\n\n```\nimport pandas\ndata.to_csv('delete_data.txt')\n```\n\n</br>\n</br>\n\n## **Json的常用操作**\n### 打开Json文件\n\n```\nimport json\nraw = open('/Users/mac/Downloads/export.json',encoding='utf-8')\n\n```\n\n### 读取Json文件和字段\n\n```\njson_txt = json.loads(i)\ntime =     json_txt['createdAt']['$numberLong']\nchatId =   json_txt['chatId']\n```\n\n\n","tags":["Python","Pandas"]},{"title":"推荐系统测评","url":"/2019/06/19/推荐系统测评/","content":"\n一个好的推荐系统，是让三方共赢的系统，包括：用户、网站、内容提供商。好的推荐系统设计能够让推荐系统本身收集到高质量的用户反馈，不断完善推荐质量，增加用户和网站的交互，提高网站的收入。\n<!-- more -->\n\n预测准确度是推荐系统领域的重要指标。比如推荐某个商品，用户真的买的。但这并不代表这个准确度是真正有意义的，加入用户本身就是要买这个商品的，如果推荐都不会有额外的价值，并未给网站&内容提供商带来新的收益。因此，好的推荐系统不仅仅能够准确预测用户行为，还能拓宽用户视野，帮助用户发现可能感兴趣却没那么容易找到的东西，同时还能把长尾好的内容提供给感兴趣的观众。\n\n#### 第一节：评测方法简介\n评测办法有三种：\n&emsp;&emsp; - &emsp;离线实验；\n&emsp;&emsp; - &emsp;用户调查；\n&emsp;&emsp; - &emsp;在线实验。\n\n新的算法如何能通过A/B Testing呢？\n&emsp;&emsp;- &emsp;离线实验证明多个指标优于现有算法；\n&emsp;&emsp;- &emsp;用户调研满意度不低于现有算法；\n&emsp;&emsp;- &emsp;A/B Testing确定我们关心的指标优于现有算法。\n\n##### 1、离线实验\n将数据分为训练集和测试集，用测试集的结果\n\n优点| 缺点 |\n --- | --- | \n不需要有对实际系统的控制权|无法计算商业上关心的指标|\n不需要用户参与实验|离线实验的指标和商业指标存在差距|\n速度快，可以测试大量数据||\n\n##### 2、用户调查\n让真实的用户，在测试环境的推荐系统上，完成一些任务，记录并观察他们的行为，回答一些问题，通过分析来了解效果。\n\n优点| 缺点 |\n --- | --- | \n优点缺点获得用户直观感受的指标|用户调研成本高（时间&金钱&人群与平台分布一致）|\n风险低，有问题后可以直接修正|难以进行大规模调研，得出的结论可能不具备统计意义|\n测试环境和生产上的用户行为不一致||\n\n##### 3、在线实验\n常用方法A/B Testing。它通过一定的规则将用户随机分成几组，并对不同组的用户采用不同的算法，然后通过统计不同组用户的各种不同的评测指标，比较不同算法，比如可以统计不同组用户的点击率，通过点击率比较不同算法的性能。\n\n<img width=500 src=\"/img/ABtesting.png\" > \n\n问题| 解决方案 |\n --- | --- | \n大型网站下，不同功能的A/B Testing可能会打架|切分流量，不同层以及控制这些层的团队需要从一个统一的地方获得自己AB测试的流量，不同层的流量应该是正交|\n\n优点| 缺点 |\n --- | --- | \n不需要用户参与实验|合理的切分流量，明确因果关系（尤其是待AB的功能较多时）|\n有大量的数据验证假设|技术成本高|\n可以评测技术以及商业上的指标||\n\n关于A/B Testing，我们之后会有专门的文章来讨论，这里就简单的介绍下。\n\n</br>\n\n#### 第二节：评测指标\n##### 1、用户满意度\n\n适用方法：用户调研、在线实验\n关注者：用户、网站\n在用户调研中，用户满意度主要通过调查问卷得来，需要注意的是调查问卷不是简单询问用户对结果是否满意，而是从不同侧面询问用户的不同感受，比如下面的案例。\n\n<img width=500 src=\"/img/user_satisified.png\" > \n\n在在线实验中，用户满意度通过统计用户行为来获取。常用的指标是：点击率、停留时间、转化率等指标，部分网站也会统计反馈按钮的点击，电商网站还可以使用购买率等。\n\n##### 2、预测准确度\n适用方法：离线实验、问卷调查\n关注者：用户、网站\n\n**算法目的：预测评分（预测对物品评分的行为）**\n评分预测的准确率一般通过均方根误差（RMSE）和平均绝对误差（MAE）来计算。其中，RMSE加大了对预测不准的惩罚。\n<img width=200 src=\"/img/formula1.png\" > \n<img width=300 src=\"/img/formula2.png\" > \n\n**算法目的：Top N推荐**\n指标：准确率和召回率\n>简单给大家介绍一下准确和召回的含义\n下图中的0，1分别代表否、是，Actual是实际情况中的数据，Predict是机器预测的数据\n准确率=在所有的数据中，机器预测正确的占比，换句话说，对所有数据来说，机器对了多少？\n召回率=在所有准确的数据中，机器预测正确的占比，换句话说，对应该对的数据来说，机器找到了多少个对的？\n<img width=300 src=\"/img/confusion.png\" > \n\n>就预测评分与TopN的讨论\n亚马逊前科学家GregLinden有不同的看法。2009年,他在CommunicationsoftheACM网站发表了一篇文章，指出电影推荐的目的是找到用户最有可能感兴趣的电影，而不是预测用户看了电影后会给电影什么样的评分。因此，TopN推荐更符合实际的应用需求。也许有一部电影用户看了之后会给很高的分数，但用户看的可能性非常小。因此，预测用户是否会看一部电影，应该比预测用户看了电影后会给它什么评分更加重要。\n\n##### 3、覆盖率\n适用方法：离线实验、用户调查、在线实验\n关注者：内容提供商\n覆盖率描述一个推荐系统对长尾物品的发掘能力。最简单的定义为：推荐出来的物品占所有物品的比例。更细致的方法是统计推荐列表中不同物品出现次数的分布。信息学和经济学中有两个指标来定义覆盖率：信息熵和基尼系数。\n\n<img width=300 src=\"/img/formula3.png\" >\n\n>**马太效应（强者越强，弱者越弱）**\nPage Ranking就是具有马太效应的案例，很多研究表明现在流行的推荐算法（比如协同过滤算法）也是具备马太效应，但推荐算法诞生之初的目的，就是为了消除马太效应。\n评测算法是否具备马太效应，就是用基尼系数。G1是用户初始行为基于物品流行度的基尼系数，G2位推荐算法基于物品流行度的基尼系数，如果G2>G1，我们说算法具备马太效应。\n\n##### 4、多样性\n适用方法：离线实验、用户调查、在线实验\n关注者：用户、网站、内容提供商\n多样性描述物品亮亮之间的不相似性。多样性和相似性是对应的。\n\n假设  s(i,j)属于[0,1]  定义了物品i和j之间的相似度，那么用户u的推荐列表R(u)的多样性定义如下：\n<img width=300 src=\"/img/formula5.png\" >\n而推荐系统的整体多样性可以定义为所有用户推荐列表多样性的平均值：\n<img width=300 src=\"/img/formula6.png\" >\n那么多样性达到什么程度呢？又可以考虑到多样性，又可以考虑到主要兴趣，比如某个用户80%时间看动画，20%看动作片，那么我们推荐动画数量：动作数量=4：1比较合理。\n\n##### 5、新颖性\n\n适用方法：离线实验、用户调查、在线实验\n关注者：用户、内容提供商\n\n新颖性是指给用户推荐那些从未听说过的物品。\n最简单的实现办法：把用户之前在网站上有过行为的物品从推荐列表中过滤掉。面临的问题：有可能这些物品用户在别的渠道看过或者购买过。\n最简单的评测办法：利用推荐结果的平均流行度，因为越不热门的物品越有可能让用户觉得新颖。面临的问题：比较粗略，因为不同用户不知道的东西是不同的。\n需要思考的是：在提升新颖度和多样性的是否，是否会对精度有影响，如何平衡这些影响？\n\n##### 6、惊喜度\n\n适用方法：用户调查\n关注者：用户、内容提供商\n\n惊喜度和新颖度的区别：\n&emsp;&emsp;- &emsp;新颖度取决于用户是否听说过这个推荐结果。\n&emsp;&emsp;- &emsp;惊喜度是推荐结果与用户历史结果不相似，但却让用户满意。\n如何评测呢？\n&emsp;&emsp;- &emsp;推荐结果与历史行为物品的相似性\n&emsp;&emsp;- &emsp;用户对结果的满意度（详见-用户满意度）\n\n##### 7、信任度\n\n适用方法： 用户调查\n关注者：网站\n\n如果用户信任推荐系统，那就会增加用户和推荐系统的交互。\n这里的信任有两方面的含义，一个是推荐的结果好，由此带来的信任感，二是推荐结果的展示符合用户信任的展示。\n**如何提高信任度呢？**\n&emsp;&emsp;- &emsp;增加推荐系统的透明度--提供推荐解释，让用户了解推荐系统的运行机制；\n&emsp;&emsp;- &emsp;利用用户的社交网络信息--利用好友的信息做推荐，并用好友作出推荐解释。比如微博：您的好友XXX点赞了这条微博。\n\n##### 8、实时性\n\n适用方法： 用户调查\n关注者：网站\n某些产品需要具备实时性的要求，比如微博、资讯类的。\n\n实时性包含两个方面：\n&emsp;&emsp;- &emsp;实时更新推荐列表来满足用户新的行为变化；\n&emsp;&emsp;- &emsp;推荐系统可以将新加入的物品推荐出去。\n\n##### 9、健壮性【鲁棒性】\n适用方法： 用户调查、在线实验\n关注者：用户、内容提供商\n\n任何一个能带来利益的推荐算法都会被攻击。\n作弊方法（可参照Tutorial on Robustness of Recommender System， ACM RecSys 2011）\n&emsp;&emsp;- &emsp;行为注入攻击--比如在Amazon，注册多个账号，同时购买A+自己的商品。\n&emsp;&emsp;- &emsp;评分系统攻击--注册多个账号，进行虚假评分。\n\n评测办法：模拟攻击\n给一份数据集和算法，然后给出一份推荐结果A，运用常用的攻击算法注入噪声数据，同样的算法给出推荐结果B，比较A与B的不同。\n\n**如何提高系统的健壮性：**\n&emsp;&emsp;- &emsp;采用较高健壮性的算法；\n&emsp;&emsp;- &emsp;尽量使用代价较高的用户行为，比如购买行为>浏览行为\n&emsp;&emsp;- &emsp;使用前进行攻击检测，对数据进行清理\n\n##### 10、商业目标\n适用方法： 在线实验\n关注者：网站、内容提供商\n\n很多时候，网站评测更加关注商业目标，商业目标与盈利模式息息相关。不同产品有着不同的商业目标，比如电商就是销售额，广告就是点击数等等。\n因此在设计算法时，也应充分考虑商业相关的指标。\n\n</br>\n\n#### 第三节：评测维度\n不同的算法在不同的场景/维度下的效果不同，评测维度包含以下三方面：\n&emsp;&emsp;- &emsp;用户维度：用户人口统计学信息、活跃度、新用户等\n&emsp;&emsp;- &emsp;物品维度：属性信息、流行度、平均分、新加入的物品等等\n&emsp;&emsp;- &emsp;时间维度：季节、工作日/周末、白天/晚上\n\n数据来源于：推荐系统实践--项亮--2012年6月--人民邮电出版社出版\n","tags":["推荐系统","测评"]},{"title":"推荐系统简介","url":"/2019/05/19/推荐系统简介/","content":"\n#### 什么是推荐系统？\n推荐系统的任务就是联系用户和信息，一方面帮助用户发现对自己有价值的信息，另一方面让信息能够展现在对它感兴趣的用户面前，从而实现信息消费者和信息生产者的双赢。\n<!-- more -->\n\n\n</br>\n\n#### 为什么会出现推荐系统？\n信息过载 + 个性化需求 + 算法。推荐系统通过发掘用户的行为， 找到用户的个性化需求， 从而将长尾商品准确地推荐给需要它的用户，帮助用户发现那些他们感兴趣但很难发现的商品。\n\n信息过载的解决方案：\n- 分类目录（只展示热门网站，数量较少）\n- 搜索引擎（需要明确的搜索意图）\n- 推荐系统（分析用户历史行为给出推荐，不需要输入）\n\n</br>\n\n#### 推荐系统的分类\n<img width=500 src=\"/img/推荐系统的分类.jpg\" >\n\n\n</br>\n\n#### 推荐系统的组成\n推荐系统应用由三部分组成：前台展示页面、后台日志系统、推荐算法\n\n个性化推荐成功的原因：\n1. 存在信息过载\n2. 大部分用户没有明确需求\n\n</br>\n\n#### 推荐系统的应用\n个性化推荐的应用：\n- 电子商务（amazon、淘宝、天猫)\n- 电影和视频网站（豆瓣、腾讯、抖音），\n- 音乐（网易、豆瓣电台），\n- 社交网络（Facebook），\n- 阅读（今日头条），\n- 位置服务LBS，\n- 邮件（Google），\n- 广告（Admaster）\n\n\n\n","tags":["推荐系统"]},{"title":"用强化学习的思维设计产品","url":"/2019/04/20/用强化学习的思维设计产品/","content":"\n本文的将简单介绍一下强化学习，然后简单描述强化学习如何应用到产品设计中，欢迎大家一起来讨论。\n此文并非是完整的一个方法论中的一部分，只是偶然间与人讨论，脑海中迸发出的一丝灵光。\n\n### 强化学习\n考虑到看到这篇文章的，可能极少有人工智能相关经验的朋友，我们就尽量简单的描述一下强化学习的概念。\n\n强化学习强调如何基于环境而行动，以取得最大化的预期利益。其思想源于行为心理学的研究，即有机体如何在环境给予的奖励或惩罚的刺激下，逐步形成对刺激的预期，产生能获得最大利益的习惯性行为。\n\n强化学习的关键点是：environment，reward，action 和 state，强化学习是一个流程的不断循环往复，这个流程简单描述如下：某一个Agent感知到了，在基于某个Environment下的state，于是做出了某个Action，Environment对这个Action有了reward【可正可负】，于是state变了，那么新的Action又会被产生，被奖励，不断循环。\n\n<img width=400 src=\"/img/reinforcementlearning.png\" > \n<center>（示例：强化学习流程）</center>\n\n</br>\n\n强化学习介绍到这里就可以了，接下来，这种强化学习的思想如何应用到产品当中。\n\n\n### 设计产品\n\n作为一个PM，在设计产品的时候，我们不能仅仅停留在设计功能的层面，还需要思考对整体系统的效益。今天主要讲一些思维，不讲功能设计。\n\n不论我们设计一个C端的产品还是B端的产品，我们的用户角色或者说用户分类是有多种的，如我们所知的，不同的用户群的诉求不一样，不同角色的利益点不一样。那么如何通过设计产品的方式，充分的调动他们的积极性，通过用户本身的行为，打造一个高效率的体系呢？\n\n把我们的产品变成一个Environment，根据每一个Agent（用户）的行为，给予他们正负的反馈。在设计中，这里的难点，在于如何设计奖惩体系。这里的关键点是两个，Action 和 Reward。\n\n就奖惩而言，在奖惩体系中，可以有奖有罚，也可以只有奖/罚。奖惩本身也分成两类，一种物质上的（更多的钱、更快的速度、更多的信息量等），一种精神上的（名声、证书等），大家使用的时候可根据本公司本产品的实际情况做一下取舍。\n你所奖赏的，需要与产品定位公司定位息息相关，举例假设一下电商平台，主要想卖一些有品质、小而美的商品，但却给销量高的做了奖赏，这是不合理的，销量高的商品，不一定符合产品本身的定位，这个时候，好评率反而比销量更合适。当然这是简化的版本，实际中的设计远比这复杂许多。因此我们在设计时，一定要紧扣产品定位，哪些东西是我们提倡的，哪些东西是触碰到我们的底线的，这些要非常清晰。\n\n当一个用户的行为触发了一个reward，那么在大量的用户大量的操作下，平台上的数据就会积累起来，形成一个正向循环。好的信息（产品/内容等）吸引到了极佳的用户，这群用户吸引到了相关的优秀的B端合作，不断循环，保证信息的高质量。\n本篇文章到这里就结束啦，感谢大家的阅读。","tags":["产品设计","强化学习"]},{"title":"关于产品模块化的思考","url":"/2017/08/27/关于产品模块化的思考/","content":"\n前几天，听一位前辈讲到产品模块化的事情，对此有些个人思考，特记录下来。\n\n### 产品模块化的定义\n在产品整个执行过程中，包括：用户调研--产品核心确定--原型设计--UI/UE设计--开发--验收，将一部分常用功能模块化。\n在这个过程中，我将整个过程分为三种情况，第一种是思维方式的模块化，发生在产品前期，用户调研，产品核心确定、原型设计的环节。第二种是创意部分的模块化，发生在UI/UE设计部分，该部分是模块化使用到的最好的地方，第三种是应用的模块化，发生在原型设计画图，开发以及验收的过程中。\n\n### 思维方式的模块化\n该部分我们换一个大家更熟悉的场景来说明，比如：尼尔森十大交互原则、Google十大产品设计原则等等，我们在开始设计产品时所用到的一些方法论，除了上述的方法论，想必大家在工作过程中，也有属于自己的一套思路和逻辑。在经历过几个产品后，我们可以把这些已有的方法论与实践总结结合，创造属于自己的产品建立逻辑。这样在一个新的产品需求来临时，我们可以很快速的，花尽量少的实践完成新产品的调研，产品线路规划等等。\n\n### 创意部分的模块化\n其实说实话，UI部分是很难模块化的，设计风格受到时代、受众、趋势等等原因影响，所以大家可以根据自己的实际情况看是否需要UI模块化，如果是外包公司或者自己公司的产品线较多，且风格一致，可以尝试一下。至于UE，可以将部分模块化，这部分属于基础模块，例如登录、个人中心等等，在个产品中通用，被大家已统一接受的地方。\n\n### 应用的模块化化\n这个问题我相信在不同的公司，尤其是做开发的同学，想必早就接触过此概念，并应用到现实情境下，代码的模块化可以高效的完成工作，在开发着点我就不再赘述。在测试环节，可以将功能分解，逐步测试不同功能，功能对应到不同的页面，这样，可测试的点就会少且有逻辑，另外，在测试中，可以将部分自动化以提高效率。\n\n### 写在最后\n其实大家发现没有，所有的一切到最后本质就是思维的逻辑，模块化只是它的表达方式。当思维清晰逻辑性强时，那么此时的行为一定是有条不紊的，并且很高效；但思维不够清晰时，我们就会时长陷入产品中，分不清主次。因此在每做一件事情的时候，我都会发时间去思考，理顺要做事情的步骤逻辑，三思而后行，这样在做东西的时候很明确的知道自己现在在做什么，接下来要做什么，最后会出来一个什么东西。\n还有一点是，模块化其实是对现有东西的整理，而在产品真正的设计中，对用户需求的满足才是重中之重，模块化只能做到锦上添花，做不到雪中送炭。\n","tags":["产品设计"]}]